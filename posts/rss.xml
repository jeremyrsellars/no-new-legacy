<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>No New Legacy Code</title>
    <description>No New Legacy Code</description>
    <link>https://jeremyrsellars.github.io/no-new-legacy</link>
    <pubDate>2016-10-23</pubDate>
    <item>
      <title>Liskov Substitution Principal and the Pit of Success</title>
      <link>https://jeremyrsellars.github.io/no-new-legacy/no-new-legacy/posts/2016-10-23-liskov-substitution-principal-and-the-pit-of-success</link>
      <pubDate>2016-10-23</pubDate>
      <description>When a data structure attempts to implement two different, incompatible usage patterns, it can lead to some nasty surprises.  In part 2 we explore how to avoid unexpected integration bugs by following the Liskov Substitution Principal.</description>
    </item>
    <item>
      <title>ConcurrentDictionary and the Pit of Success</title>
      <link>https://jeremyrsellars.github.io/no-new-legacy/no-new-legacy/posts/2016-10-21-concurrentdictionary-and-the-pit-of-success</link>
      <pubDate>2016-10-21</pubDate>
      <description>When a class attempts to implement two different, incompatible usage patterns, it can lead to some nasty surprises.  This is part 1 in a series about exploring how a small violation of the Liskov Substitution Principal can lead to unexpected bugs.  ConcurrentDictionary can be accidentally used incorrectly because of a subtle Liskov Substitution Principal violation.</description>
    </item>
    <item>
      <title>Functional State Management (in .Net)</title>
      <link>https://jeremyrsellars.github.io/no-new-legacy/no-new-legacy/posts/2016-09-27-functional-state-management-in-net</link>
      <pubDate>2016-09-27</pubDate>
      <description>Bring some sanity to state management in C# by borrowing functional programming concepts.</description>
    </item>
    <item>
      <title>Review 'Software Ninja Class Hierarchy'</title>
      <link>https://jeremyrsellars.github.io/no-new-legacy/no-new-legacy/posts/2015-11-01-review-of-software-ninja-class-hierarchy</link>
      <pubDate>2015-11-01</pubDate>
      <description>My recommendation of Terence McGhee's Software Ninja Class Hierarchy</description>
    </item>
  </channel>
</rss>
